name: Deploy Wedding Website

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Frontend Build and Test
  frontend:
    name: Frontend (Next.js)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
        
    - name: Install dependencies
      working-directory: ./client
      run: npm ci
      
    - name: Run linting
      working-directory: ./client
      run: npm run lint
      
    - name: Run type checking
      working-directory: ./client
      run: npm run type-check
      
    - name: Build application
      working-directory: ./client
      env:
        NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: client/.next
        retention-days: 1

  # Backend Build and Test
  backend:
    name: Backend (Laravel)
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wedding_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, dom, fileinfo, mysql, gd
        coverage: none
        
    - name: Get Composer Cache Directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      
    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-
        
    - name: Install Composer dependencies
      working-directory: ./server
      run: composer install --prefer-dist --no-progress --no-suggest --no-interaction
      
    - name: Setup Environment
      working-directory: ./server
      run: |
        cp .env.example .env
        php artisan key:generate
        
    - name: Configure Database
      working-directory: ./server
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: wedding_test
        DB_USERNAME: root
        DB_PASSWORD: root
      run: |
        php artisan migrate --force
        
    - name: Run tests
      working-directory: ./server
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: wedding_test
        DB_USERNAME: root
        DB_PASSWORD: root
      run: php artisan test

  # Deploy to Production
  deploy-production:
    name: Deploy to Production
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    # Deploy Frontend to Vercel
    - name: Deploy Frontend to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-args: '--prod'
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./client
        
    # Deploy Backend (placeholder - customize based on your hosting provider)
    - name: Deploy Backend
      run: |
        echo "Backend deployment would go here"
        echo "Configure for your hosting provider (Google Cloud, Azure, AWS, etc.)"

  # Deploy to Staging
  deploy-staging:
    name: Deploy to Staging
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy Frontend to Vercel (Preview)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./client
        
    - name: Deploy Backend to Staging
      run: |
        echo "Staging backend deployment would go here"